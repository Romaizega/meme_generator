openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listMemeUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemeUser'
          description: ''
      tags:
      - api
    post:
      operationId: createMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/users/me/:
    get:
      operationId: meMemeUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meMemeUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveMemeUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemeUser'
          description: ''
      tags:
      - api
    put:
      operationId: updateMemeUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemeUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemeUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemeUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemeUser'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMemeUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemeUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemeUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemeUser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemeUser'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMemeUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/templates/:
    get:
      operationId: listMemeTemplates
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemeTemplate'
          description: ''
      tags:
      - api
    post:
      operationId: createMemeTemplate
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemeTemplate'
          description: ''
      tags:
      - api
  /api/templates/recived/:
    get:
      operationId: recivedMemeTemplate
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemeTemplate'
          description: ''
      tags:
      - api
  /api/templates/{id}/:
    get:
      operationId: retrieveMemeTemplate
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this meme template.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemeTemplate'
          description: ''
      tags:
      - api
    put:
      operationId: updateMemeTemplate
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this meme template.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemeTemplate'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMemeTemplate
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this meme template.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemeTemplate'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMemeTemplate
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this meme template.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/ratings/:
    get:
      operationId: listRatings
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    post:
      operationId: createRating
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
  /api/ratings/{id}/:
    get:
      operationId: retrieveRating
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    put:
      operationId: updateRating
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRating
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRating
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/memes/:
    get:
      operationId: listMemes
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meme'
          description: ''
      tags:
      - api
    post:
      operationId: createMeme
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meme'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meme'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meme'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meme'
          description: ''
      tags:
      - api
  /api/memes/{id}/:
    get:
      operationId: retrieveMeme
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this meme.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meme'
          description: ''
      tags:
      - api
    put:
      operationId: updateMeme
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this meme.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meme'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meme'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meme'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meme'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMeme
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this meme.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meme'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meme'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meme'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meme'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMeme
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this meme.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/activation/:
    post:
      operationId: activationMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/users/resend_activation/:
    post:
      operationId: resendActivationMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password/:
    post:
      operationId: resetPasswordMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/users/reset_email/:
    post:
      operationId: resetUsernameMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_email_confirm/:
    post:
      operationId: resetUsernameConfirmMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/users/set_password/:
    post:
      operationId: setPasswordMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/users/set_email/:
    post:
      operationId: setUsernameMemeUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/templates/send/:
    post:
      operationId: sendMemeTemplate
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MemeTemplate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemeTemplate'
          description: ''
      tags:
      - api
  /api/ratings/{id}/rate_meme/:
    post:
      operationId: rateMemeRating
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this rating.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: ''
      tags:
      - api
  /api/auth/token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - api
  /api/auth/token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    MemeUser:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 150
        id:
          type: integer
          readOnly: true
        username:
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 100
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
      required:
      - email
      - username
      - first_name
      - last_name
    User:
      type: object
      properties:
        username:
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 100
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
      required:
      - username
      - first_name
      - last_name
    MemeTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        image_url:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        default_top_text:
          type: string
          maxLength: 100
        default_bottom_text:
          type: string
          maxLength: 100
      required:
      - name
      - image_url
    Rating:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        meme:
          type: integer
        user:
          type: integer
        score:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          type: integer
          minimum: -2147483648
          maximum: 2147483647
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - meme
      - user
      - score
    Meme:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        template:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 100
            image_url:
              type: string
              format: uri
              maxLength: 200
              pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
                .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
                ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF\
                0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
                -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\\
                s]*)?\\z"
            default_top_text:
              type: string
              maxLength: 100
            default_bottom_text:
              type: string
              maxLength: 100
          required:
          - name
          - image_url
        top_text:
          type: string
          maxLength: 100
        bottom_text:
          type: string
          maxLength: 100
        created_by:
          type: object
          properties:
            email:
              type: string
              format: email
              maxLength: 150
            id:
              type: integer
              readOnly: true
            username:
              type: string
              pattern: ^[\w.@+-]+$
              maxLength: 100
            first_name:
              type: string
              maxLength: 100
            last_name:
              type: string
              maxLength: 100
          required:
          - email
          - username
          - first_name
          - last_name
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - template
      - top_text
      - bottom_text
      - created_by
    UserCreate:
      type: object
      properties:
        username:
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 100
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - first_name
      - last_name
      - email
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          maxLength: 150
      required:
      - new_email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          maxLength: 150
      required:
      - current_password
      - new_email
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
